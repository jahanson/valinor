---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app mastodon-sidekiq-remote-ingress
  namespace: fediverse
  labels:
    app: mastodon
    component: sidekiq
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      replicas: 1
      # My default nodes have 2cpus so it seems easier to scale nodes in the panel
      # rather than messing with tolerations and affinitie. The only reason I can
      # think of to scale nodes is to scale sidekiq.
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        app: mastodon
        component: sidekiq
    image:
      repository: ghcr.io/mastodon/mastodon
      tag: v4.1.6@sha256:51405bec6529860c88640bbca3d30bf3a9a82456a3fdae122dc52f4f941808ff
    command: ["bundle", "exec", "sidekiq", "-c", "25", "-q", "ingress"]
    envFrom:
      - secretRef:
          name: mastodon-secret
    env:
      DB_NAME: "$(CP_SIDEKIQ_INGRESS)"
      DB_PORT: "${CP_DB_PORT}"
      PREPARED_STATEMENTS: "false" # neccessary for pgbouncer
    service:
      main:
        enabled: false
    # nodeSelector:
    #   doks.digitalocean.com/node-pool: pool-sidekiq
    resources:
      requests:
        cpu: 2000m
        memory: 800Mi
